# Generated by Django 5.0.1 on 2025-07-13 21:44

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_management', '0003_ragdocument'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=30)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('CONFIRMED', 'Confirmed'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show')], default='SCHEDULED', max_length=20)),
                ('reason', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appointments',
            },
        ),
        migrations.CreateModel(
            name='CancerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancer_type', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cancer_types',
            },
        ),
        migrations.CreateModel(
            name='Clinician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(max_length=100)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('years_of_experience', models.IntegerField()),
                ('bio', models.TextField(blank=True)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clinicians',
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=100)),
                ('service', models.CharField(max_length=50)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'event_logs',
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('LAB_RESULT', 'Lab Result'), ('PRESCRIPTION', 'Prescription'), ('IMAGING', 'Imaging'), ('PROCEDURE', 'Procedure'), ('VACCINATION', 'Vaccination')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('diagnosis', models.TextField(blank=True)),
                ('treatment', models.TextField(blank=True)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'medical_records',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True, unique=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=10)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('emergency_contact_name', models.CharField(max_length=255)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('preferred_language_id', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'patients',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=255)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('instructions', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'prescriptions',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.RenameIndex(
            model_name='fileaccesslog',
            new_name='file_access_file_id_ed8ffc_idx',
            old_name='file_access_file_id_a5e2f6_idx',
        ),
        migrations.RenameIndex(
            model_name='fileaccesslog',
            new_name='file_access_user_id_aa8b89_idx',
            old_name='file_access_user_id_5d0e2b_idx',
        ),
        migrations.RenameIndex(
            model_name='filemetadata',
            new_name='file_metada_user_id_079911_idx',
            old_name='file_metada_user_id_aa5879_idx',
        ),
        migrations.RenameIndex(
            model_name='filemetadata',
            new_name='file_metada_file_ha_ae2673_idx',
            old_name='file_metada_file_ha_c91f5a_idx',
        ),
        migrations.AlterField(
            model_name='filemetadata',
            name='file_hash',
            field=models.CharField(db_index=True, max_length=64),
        ),
        migrations.AddField(
            model_name='cancertype',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtypes', to='data_management.cancertype'),
        ),
        migrations.AddField(
            model_name='clinician',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clinician_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='clinician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='data_management.clinician'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['event_type'], name='event_logs_event_t_d63704_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['service'], name='event_logs_service_e76474_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['created_at'], name='event_logs_created_87c40d_idx'),
        ),
        migrations.AddField(
            model_name='medicalrecord',
            name='appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_management.appointment'),
        ),
        migrations.AddField(
            model_name='medicalrecord',
            name='clinician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_management.clinician'),
        ),
        migrations.AddField(
            model_name='medicalrecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='data_management.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='data_management.patient'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='clinician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_management.clinician'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='medical_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_management.medicalrecord'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='data_management.patient'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='users', to='data_management.role'),
        ),
        migrations.AddIndex(
            model_name='cancertype',
            index=models.Index(fields=['cancer_type'], name='cancer_type_cancer__c001ef_idx'),
        ),
        migrations.AddIndex(
            model_name='cancertype',
            index=models.Index(fields=['parent'], name='cancer_type_parent__754e20_idx'),
        ),
        migrations.AddIndex(
            model_name='clinician',
            index=models.Index(fields=['specialization'], name='clinicians_special_519190_idx'),
        ),
        migrations.AddIndex(
            model_name='clinician',
            index=models.Index(fields=['is_available'], name='clinicians_is_avai_cf699a_idx'),
        ),
        migrations.AddIndex(
            model_name='medicalrecord',
            index=models.Index(fields=['record_type'], name='medical_rec_record__6b7b73_idx'),
        ),
        migrations.AddIndex(
            model_name='medicalrecord',
            index=models.Index(fields=['created_at'], name='medical_rec_created_d796b8_idx'),
        ),
        migrations.AddIndex(
            model_name='medicalrecord',
            index=models.Index(fields=['patient', 'created_at'], name='medical_rec_patient_bfaf9b_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date'], name='appointment_appoint_8b74ac_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='appointment_status_9fecd6_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date'], name='appointment_patient_ee8848_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['clinician', 'appointment_date'], name='appointment_clinici_c70396_idx'),
        ),
        migrations.AddIndex(
            model_name='prescription',
            index=models.Index(fields=['is_active'], name='prescriptio_is_acti_6d1fe6_idx'),
        ),
        migrations.AddIndex(
            model_name='prescription',
            index=models.Index(fields=['patient', 'is_active'], name='prescriptio_patient_26b7bd_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='users_role_id_7a277c_idx'),
        ),
    ]
