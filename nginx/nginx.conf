user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    
    # Docker's embedded DNS server
    resolver 127.0.0.11 valid=30s;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Upstream services
    upstream auth_service {
        server auth-service:8001;
    }

    upstream patient_service {
        server patient-service:8002;
    }

    upstream clinician_service {
        server clinician-service:8003;
    }

    upstream database_service {
        server database-service:8004;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com;" always;

        # Root location - redirect to login
        location = / {
            return 301 /login;
        }
        
        # Default location for other unmatched paths
        location / {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Auth service routes
        location /api/auth/ {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /login {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /signup {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /logout {
            proxy_pass http://auth_service/logout/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Patient service routes
        location /api/patients/ {
            proxy_pass http://patient_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /patient/ {
            proxy_pass http://patient_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Patient service static files
        location ~ ^/patient/static/(.*)$ {
            proxy_pass http://patient_service/static/$1;
            proxy_set_header Host $host;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Clinician service routes
        location /api/clinicians/ {
            proxy_pass http://clinician_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /clinician/ {
            proxy_pass http://clinician_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Database service routes (internal API)
        location /api/db/ {
            proxy_pass http://database_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoints
        location /health/auth {
            proxy_pass http://auth_service/health/;
            proxy_set_header Host $host;
        }

        location /health/patient {
            proxy_pass http://patient_service/health/;
            proxy_set_header Host $host;
        }

        location /health/clinician {
            proxy_pass http://clinician_service/health/;
            proxy_set_header Host $host;
        }

        location /health/database {
            proxy_pass http://database_service/health/;
            proxy_set_header Host $host;
        }

        # Combined health check
        location /health {
            default_type application/json;
            return 200 '{"status": "healthy", "service": "nginx"}';
        }

        # Static files - try auth service first, then patient service
        location /static/ {
            # Remove X-Content-Type-Options header for static files to avoid MIME type issues
            proxy_hide_header X-Content-Type-Options;
            
            # Try auth service first
            proxy_pass http://auth_service/static/;
            proxy_intercept_errors on;
            error_page 404 = @patient_static;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        location @patient_static {
            proxy_pass http://patient_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        location /media/ {
            alias /media/;
            expires 7d;
            add_header Cache-Control "public";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}